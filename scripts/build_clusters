#!/usr/bin/env python2.7

import networkx
import argparse


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("distances", type=str)
    parser.add_argument("--distanceThreshold", type=float, default=0.05)

    args = parser.parse_args()

    graph = networkx.Graph()

    with open(args.distances, "r") as distancesRead:
        for line in distancesRead:
            if line == "":
                continue
            i, j, dist = line.split()
            if not graph.has_node(i):
                graph.add_node(i)
            if not graph.has_node(j):
                graph.add_node(j)
            if float(dist) < args.distanceThreshold:
                graph.add_edge(i, j)
    for component in networkx.connected_components(graph):
        if len(component) < 2:
            continue
        print(" ".join(component))

if __name__ == "__main__":
    main()
